#pragma checksum "D:\WebTasarım\Core_Proje\Asp_Core_Proje\Views\Experience2\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9d44fb704a3ed5477b8f6b3a7afdd37d1d085162"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Experience2_Index), @"mvc.1.0.view", @"/Views/Experience2/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\WebTasarım\Core_Proje\Asp_Core_Proje\Views\_ViewImports.cshtml"
using Asp_Core_Proje;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\WebTasarım\Core_Proje\Asp_Core_Proje\Views\_ViewImports.cshtml"
using Asp_Core_Proje.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\WebTasarım\Core_Proje\Asp_Core_Proje\Views\Experience2\Index.cshtml"
using EntityLayer.Concrete;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9d44fb704a3ed5477b8f6b3a7afdd37d1d085162", @"/Views/Experience2/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"44259083edbd18a46ae939ec41501b10731a65fe", @"/Views/_ViewImports.cshtml")]
    public class Views_Experience2_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<Experience>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 4 "D:\WebTasarım\Core_Proje\Asp_Core_Proje\Views\Experience2\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""col-md-6 mb-4"">
    <div class=""p-2"">
        <button type=""button"" id=""btngetlistall"" class=""btn btn-outline-primary"">Verileri Getir</button>
        <button type=""button"" id=""btnadd"" class=""btn btn-outline-success"">Kaydet</button>
        <button type=""button"" id=""btnid"" class=""btn btn-outline-warning"">ID ile Getir</button>
        <button type=""button"" id=""btndeletebyid"" class=""btn btn-outline-danger"">Sil</button>
    </div>
</div>

<div class=""col-md-12"" id=""listexperience"" style=""margin-bottom:20px"">

</div>

<div class=""col-md-12"" id=""listexperiencebyid"" style=""margin-bottom:20px"">

</div>


<div class=""col-md-11"">
    <h5>Deneyim Ekleme Paneli</h5>
    <input type=""text"" class=""form-control"" id=""inpName"" placeholder=""Ad"" required />
    <br />
    <input type=""text"" class=""form-control"" id=""inpDate"" placeholder=""Tarih"" required />
</div>

<div class=""col-md-11"" style=""margin-top:20px"">
    <h5>Id'ye bağlı deneyim getirme</h5>
    <input type=""text"" class=""form-c");
            WriteLiteral("ontrol\" id=\"inpID\" placeholder=\"ID Giriniz\" />\r\n</div>\r\n\r\n<div class=\"col-md-11\" style=\"margin-top:20px\">\r\n    <h5>Id\'ye bağlı silme</h5>\r\n    <input type=\"text\" class=\"form-control\" id=\"inpexpID\" placeholder=\"ID Giriniz\" />\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(""#btngetlistall"").click(function () {
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""Get"",
                url: ""/Experience2/ListExperience/"",

                success: function (my_func) {
                    let values = jQuery.parseJSON(my_func);
                    console.log(values);

                    let htmlst = ""<table class=table table-bordered> <tr> <th> ID </th> <th> Başlık </th> <th> Tarih </th> </tr>""

                    $.each(values, (index, value) => {
                        htmlst += `<tr> <td>${value.ExperienceID}</td> <td>${value.Name}</td> <td>${value.Date}</td></tr>`
                    });
                    htmlst += ""</table>"";
                    $(""#listexperience"").html(htmlst);
                }
            });
        });

        $(""#btnadd"").click(function () {
            let values = {
                Name: $(""#inpName"").val(),
            ");
                WriteLiteral(@"    Date: $(""#inpDate"").val()
            };

            $.ajax({
                type: ""Post"",
                url: ""/Experience2/AddExperience/"",
                data: values,
                success: function (my_func1) {
                    let result = jQuery.parseJSON(my_func1);
                    alert(result.Name + "" başarılı bir şekilde eklendi"");
                }
            });
        });

        $(""#btnid"").click(y => {
            let id = $(""#inpID"").val();

            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""Get"",
                url: ""/Experience2/GetExperience/"",
                data: { ExperienceID: id },
                success: function (my_func2) {
                    let value = jQuery.parseJSON(my_func2);
                    console.log(value);

                    let htmlst = ""<table class=table table-striped> <tr> <th>ID</th> <th>Başlık</th> <th>Tarih</th> </tr>""

            ");
                WriteLiteral(@"        htmlst += `<tr> <td>${value.ExperienceID}</td> <td>${value.Name}</td> <td>${value.Date}</td> </tr> 
                    </table>`

                    $(""#listexperiencebyid"").html(htmlst);
                }
            });
        });

        $(""#btndeletebyid"").click(k => {
            let id = $(""#inpexpID"").val();
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""post"",
                url: ""/Experience2/DeleteExperience/"",
                data: { ExperienceID: id },
                success: function (my_func3) {
                    let result = jQuery.parseJSON(my_func1);
                    alert(result.Name + "" başarılı bir şekilde silindi"");
                }
            })
        })

    </script>
");
            }
            );
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d44fb704a3ed5477b8f6b3a7afdd37d1d0851628431", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<Experience>> Html { get; private set; }
    }
}
#pragma warning restore 1591
